<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mac下shadowsocks的安装</title>
      <link href="/2019/11/30/Mac%E4%B8%8Bshadowsocks%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2019/11/30/Mac%E4%B8%8Bshadowsocks%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="Mac-OS"><a href="#Mac-OS" class="headerlink" title="Mac OS"></a>Mac OS</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Mac OS下的安装很简单，解压，导入配置就可以使用了</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>下载安装包，解压后双击打开。</p><p>下载地址：<a href="https://www.lanzous.com/b965209/" target="_blank" rel="noopener">https://www.lanzous.com/b965209/</a>  密码:2our</p><h3 id="安装配置过程"><a href="#安装配置过程" class="headerlink" title="安装配置过程"></a>安装配置过程</h3><p>解压后，双击纸飞机进行安装</p><p><img src="https://i.loli.net/2019/09/30/qnMoyXSe2cCIYVO.png" alt></p><p>如遇：「xxx.app已损坏，打不开。你应该将它移到废纸篓」，并非你安装的软件已损坏，而是Mac系统的安全设置问题。详见：<a href="http://xclient.info/a/74559ea2-7870-b992-ed53-52a9d988e382.html" target="_blank" rel="noopener">MAC应用无法打开或文件损坏的处理方法</a></p><p>点击打开</p><p><img src="https://i.loli.net/2019/09/30/PiQ2WcqHOa5teA8.png" alt></p><p>然后在右上角的状态栏能看到纸飞机的图标</p><p><img src="https://i.loli.net/2019/09/30/pVQ4wAGtaiM7ENL.png" alt></p><p>依次点击<strong>打开shadowsocks</strong>和<strong>PAC自动模式</strong></p><p><img src="https://i.loli.net/2019/09/30/KcZitGe19OTYhN8.png" alt></p><p>最后一步，将二维码放在电脑屏幕中间，点击扫描屏幕上的二维码</p><p><img src="https://i.loli.net/2019/09/30/t8ucY57PSAyo4da.png" alt></p><p>扫描成功则会提示</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190903112257.png" alt></p><p>按照图示选择服务器</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190903112410.png" alt></p><p>打开浏览器输入  google.com，检验一下是否配置成功</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190903112505.png" alt></p><p>enjoy ！</p>]]></content>
      
      
      
        <tags>
            
            <tag> shadowsocks 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下shadowsocks的安装</title>
      <link href="/2019/11/30/Windows%E4%B8%8Bshadowsocks%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2019/11/30/Windows%E4%B8%8Bshadowsocks%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>windows下的安装很简单，解压，导入配置就可以使用了</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p><strong>下载shadowsocks客户端压缩包，解压到容易找到的地方。</strong></p><p>下载地址：<a href="https://www.lanzous.com/b965206/" target="_blank" rel="noopener">https://www.lanzous.com/b965206/</a> 密码:fp20</p><p>下载后解压至容易找到的目录。</p><h3 id="安装配置过程"><a href="#安装配置过程" class="headerlink" title="安装配置过程"></a>安装配置过程</h3><p>解压后，文件夹内是客户端程序<br><img src="https://i.loli.net/2019/09/30/3Ow7lHFk5rzYNvf.png" alt></p><p>如果安装时提示下图内容（一般是win7系统），请下载安装 .NET Framework4</p><p><a href="https://download.microsoft.com/download/F/9/4/F942F07D-F26F-4F30-B4E3-EBD54FABA377/NDP462-KB3151800-x86-x64-AllOS-ENU.exe" target="_blank" rel="noopener">.NET Framework4.6.2官方下载地址</a></p><p><img src="https://i.loli.net/2019/09/23/wXvIxkcABjqV6ys.png" alt></p><p>双击运行，可以在打开的框中填入配置，或者扫描二维码（<strong>看后面的步骤有介绍</strong>）</p><p><img src="https://i.loli.net/2019/09/30/rwI7NiQWyThvJDt.png" alt></p><p><strong>二维码导入配置（先拿到二维码，打开放在屏幕中间）</strong></p><p>首先点击上箭头，能看到纸飞机的图标</p><p><img src="https://i.loli.net/2019/09/30/URhEZW5lJHOFu4z.png" alt></p><p><strong>右键点击纸飞机的图标，依次选择服务器–扫描屏幕上的二维码</strong></p><p><img src="https://i.loli.net/2019/09/30/zoq1cH6CJplFBXP.png" alt></p><p><strong>识别成功后会弹出新添加的配置，点击确定。</strong></p><p><img src="https://i.loli.net/2019/09/30/eqhwlBR54YaPJbt.png" alt></p><p>再次右键纸飞机图标，依次选择<strong>系统代理–PAC模式</strong>，开启代理</p><p><img src="https://i.loli.net/2019/09/30/Y2GWwtBisgUfSEj.png" alt></p><p>顺便加上开机自启，后面就不需要这么麻烦了</p><p><img src="https://i.loli.net/2019/09/30/VoIUHvWmBiPNX36.png" alt></p><p>最后检验一下 ，打开浏览器输入  google.com</p><p><img src="https://i.loli.net/2019/09/30/aneLxpAMtlrkFBy.png" alt></p><p>enjoy ！</p>]]></content>
      
      
      
        <tags>
            
            <tag> shadowsocks 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iPhone下shadowsocks的安装</title>
      <link href="/2019/11/30/iPhone%E4%B8%8Bshadowsocks%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2019/11/30/iPhone%E4%B8%8Bshadowsocks%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="苹果IOS"><a href="#苹果IOS" class="headerlink" title="苹果IOS"></a>苹果IOS</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>由于苹果中国的政策原因，VPN软件大部分被下架了。所以本次的IOS客户端需要通过电脑进行安装（如果有美国苹果的账号可以下载potatso lite）。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>1、在电脑上安装 <a href="https://pro.25pp.com/" target="_blank" rel="noopener">pp助手</a></p><p>2、下载shadowrocket客户端</p><p>下载地址：<a href="https://www.lanzous.com/b965205/" target="_blank" rel="noopener">https://www.lanzous.com/b965205/</a>    密码:b9zm</p><p>下载后解压得到ipa文件</p><h3 id="安装配置过程"><a href="#安装配置过程" class="headerlink" title="安装配置过程"></a>安装配置过程</h3><p>打开pp助手</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190902141009.png" alt><br>连接iPhone/iPad</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190902141451.png" alt><br>在手机上解锁并点击信任，点击信任后需要输入锁屏密码</p><p>连接成功后，依次点击应用管理，安装本地应用</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190902142628.png" alt></p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190902142831.png" alt><br>选择前面下载的ipa文件，点击打开</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190902142911.png" alt><br>点击安装</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190902143002.png" alt><br>点击箭头指的地方可以看到安装进度</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190902143035.png" alt><br>打开shadowrocket，可以扫描二维码或者点击加号手动添加配置</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190902144651.png" alt><br>添加好配置后，选择节点（黄色的点代表被选中的节点），打开箭头所指的开关。按照图中的步骤配置即可。</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190902144146.png" alt><br><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190902144330.png" alt><br>指纹或者面容ID</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdown20190902144452.png" alt></p><p>然后验证一下，打开浏览器输入  google.com</p><p><img src="https://raw.githubusercontent.com/whisshe/picture/master/markdownb75156e3821228818e25a8220e91baa.jpg" alt></p><p>enjoy ！</p>]]></content>
      
      
      
        <tags>
            
            <tag> shadowsocks 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shadowsocks客户端的安装及配置的导入</title>
      <link href="/2019/11/30/shadowsocks%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%9A%84%E5%AF%BC%E5%85%A5/"/>
      <url>/2019/11/30/shadowsocks%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%9A%84%E5%AF%BC%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<ul><li><p><a href="https://whisshe.github.io/2019/11/30/iPhone%E4%B8%8Bshadowsocks%E7%9A%84%E5%AE%89%E8%A3%85/">IOS客户端的安装</a></p></li><li><p><a href="https://whisshe.github.io/2019/11/30/%E5%AE%89%E5%8D%93%E4%B8%8Bshadowsocks%E7%9A%84%E5%AE%89%E8%A3%85/">Android客户端的安装</a></p></li><li><p><a href="https://whisshe.github.io/2019/11/30/Windows%E4%B8%8Bshadowsocks%E7%9A%84%E5%AE%89%E8%A3%85/">Windows客户端的安装</a></p></li><li><p><a href="https://whisshe.github.io/2019/11/30/Mac%E4%B8%8Bshadowsocks%E7%9A%84%E5%AE%89%E8%A3%85/">Mac OS客户端的安装</a></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> shadowsocks 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓下shadowsocks的安装</title>
      <link href="/2019/11/30/%E5%AE%89%E5%8D%93%E4%B8%8Bshadowsocks%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2019/11/30/%E5%AE%89%E5%8D%93%E4%B8%8Bshadowsocks%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="安卓"><a href="#安卓" class="headerlink" title="安卓"></a>安卓</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>安卓的安装不那么麻烦，不需要电脑也能安装成功。但是依赖谷歌组件，可以自行下载<strong>谷歌安装器</strong>，一键安装谷歌组件。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>下载shadowsocks客户端安装包</p><p>下载地址：<a href="https://www.lanzous.com/b05hzryd" target="_blank" rel="noopener">https://www.lanzous.com/b05hzryd</a>  密码:9iek</p><p>解压后是一个apk安装包。</p><h3 id="安装配置过程"><a href="#安装配置过程" class="headerlink" title="安装配置过程"></a>安装配置过程</h3><p>安装apk，打开软件后点击右上角的+号图标<br><img src="https://i.loli.net/2019/09/30/O9ACVMig5l3dqcS.png" alt></p><p>选择扫描二维码<br><img src="https://i.loli.net/2019/09/30/q57UeF6fE2XKVRp.png" alt></p><p>直接扫描二维码，如果二维码是保存在相册中，则点击右上角的相册图标进入相册选择二维码</p><p><img src="https://i.loli.net/2019/09/30/v3KBRiNEJLdHAt4.png" alt><br>如果通过相册中的二维码扫描失败，尝试从<strong>剪贴板导入URL</strong></p><p>先复制发给你的URL（ss://开头的链接），到手机中按图示点击从剪贴板导入，就能看到新添加的配置。<br><img src="https://i.loli.net/2019/09/30/FLePM2fzjrJIZvm.png" alt></p><p>添加成功后，删除软件自带的198开头的（左滑或者右滑删除，198开头的是不能上网的），点击新添加的配置（前面是绿色代表选中），然后再点击下方的纸飞机图标即可开启<br>如果手机提示需要添加VPN的权限，同意即可</p><p><img src="https://i.loli.net/2019/09/30/nUvp7PYhRxyJGXg.png" alt></p><p>最后检验一下，打开浏览器输入  google.com</p><p><img src="https://i.loli.net/2019/09/30/n7CRmEelOkUL82p.png" alt></p><p>enjoy ！</p>]]></content>
      
      
      
        <tags>
            
            <tag> shadowsocks 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git基础</title>
      <link href="/2019/09/15/git%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/09/15/git%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<!-- TOC --><ul><li><a href="#gitlab相关">gitlab相关</a></li><li><a href="#基础知识">基础知识</a><ul><li><a href="#git版本概念">git版本概念</a></li><li><a href="#初始化">初始化</a></li><li><a href="#创建仓库克隆仓库">创建仓库、克隆仓库</a><ul><li><a href="#制作仓库">制作仓库</a></li><li><a href="#关联远程仓库">关联远程仓库</a></li><li><a href="#克隆远程仓库">克隆远程仓库</a></li></ul></li><li><a href="#查看工作区的文件修改状态">查看工作区的文件修改状态</a><ul><li><a href="#查看文件差异">查看文件差异</a></li></ul></li><li><a href="#添加和提交">添加和提交</a><ul><li><a href="#添加修改到暂存区">添加修改到暂存区</a></li><li><a href="#提交修改到你本地的版本库">提交修改到你本地的版本库</a></li></ul></li><li><a href="#忽略文件列表">忽略文件列表</a></li><li><a href="#移除文件">移除文件</a><ul><li><a href="#仅删除暂存区中的但是想保留工作目录的文件">仅删除暂存区中的，但是想保留工作目录的文件</a></li><li><a href="#同时删除暂存区和工作目录的文件">同时删除暂存区和工作目录的文件</a></li><li><a href="#通配符模式">通配符模式</a></li></ul></li><li><a href="#推送更改到远程仓库">推送更改到远程仓库</a><ul><li><a href="#如果本地目录并没有关联远程仓库">如果本地目录并没有关联远程仓库</a></li><li><a href="#推送前面commit到版本库的内容到远程仓库的指定分支">推送前面commit到版本库的内容到远程仓库的指定分支</a></li><li><a href="#推送所有分支">推送所有分支</a></li><li><a href="#强制推送">强制推送</a></li></ul></li><li><a href="#分支">分支</a><ul><li><a href="#拉取远程仓库的代码">拉取远程仓库的代码</a></li><li><a href="#查看当前存在的分支以及当前处于哪个分支">查看当前存在的分支，以及当前处于哪个分支</a></li><li><a href="#以当前的master分支为基础创建一个dev分支并切换到dev分支">以当前的master分支为基础创建一个dev分支，并切换到dev分支</a></li><li><a href="#切换回master分支">切换回master分支</a></li><li><a href="#删除创建的分支">删除创建的分支</a></li><li><a href="#合并分支">合并分支</a></li><li><a href="#合并出现冲突">合并出现冲突</a></li><li><a href="#查看当前分支与其它分支的差异">查看当前分支与其它分支的差异</a></li></ul></li><li><a href="#版本提交记录">版本提交记录</a><ul><li><a href="#查看提交记录不包含被删除的commit操作">查看提交记录(不包含被删除的commit操作)</a></li><li><a href="#查看所有的reset和commit操作">查看所有的reset和commit操作</a></li><li><a href="#更多的功能">更多的功能</a></li></ul></li><li><a href="#版本回溯">版本回溯</a><ul><li><a href="#如果有操作失误可以使用以下命令丢弃本地文件的修改">如果有操作失误，可以使用以下命令丢弃本地文件的修改</a></li><li><a href="#撤销暂存区中的修改">撤销暂存区中的修改</a></li><li><a href="#如果忘记了修改了哪些文件下面有两种方法进行恢复">如果忘记了修改了哪些文件，下面有两种方法进行恢复</a></li></ul></li></ul></li><li><a href="#实用技巧">实用技巧</a><ul><li><a href="#别名">别名</a></li><li><a href="#彩色的输出">彩色的输出</a></li></ul></li><li><a href="#更深入的了解">更深入的了解</a></li></ul><!-- /TOC --><h2 id="gitlab相关"><a href="#gitlab相关" class="headerlink" title="gitlab相关"></a>gitlab相关</h2><p><a href="http://gitlab.ngrok.pkgame.net/public_doc/docs/blob/master/gitlab%E5%88%9D%E5%A7%8B.md" target="_blank" rel="noopener">gitlab相关</a></p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="git版本概念"><a href="#git版本概念" class="headerlink" title="git版本概念"></a>git版本概念</h3><p>你的本地仓库由 git 维护的三个部分组成。第一个是你的 工作目录，它持有实际文件；第二个是 暂存区（Index），它像个缓存区域，临时保存你的改动；最后是 HEAD，HEAD是一个指针，指向最新的提交，也就是你最后一次提交的结果。<br><img src="http://rogerdudler.github.io/git-guide/img/trees.png" alt="git版本概念"></p><p><img src="https://git-scm.com/book/en/v2/images/reset-workflow.png" alt="git工作流程示意"></p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><pre><code>git init </code></pre><p>使用git对本地项目进行管理，会生成一个.git的文件夹，版本库和配置文件在里面</p><h3 id="创建仓库、克隆仓库"><a href="#创建仓库、克隆仓库" class="headerlink" title="创建仓库、克隆仓库"></a>创建仓库、克隆仓库</h3><h4 id="制作仓库"><a href="#制作仓库" class="headerlink" title="制作仓库"></a>制作仓库</h4><pre><code>git clone --bare &lt;localdir&gt; &lt;local&gt;.git</code></pre><h4 id="关联远程仓库"><a href="#关联远程仓库" class="headerlink" title="关联远程仓库"></a>关联远程仓库</h4><pre><code>git remote add &lt;reponame&gt; username@host:/path/to/repository </code></pre><h4 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h4><pre><code>git clone username@host:/path/to/repository #ssh方式git clone http://url/path/to/repository #http方式</code></pre><h3 id="查看工作区的文件修改状态"><a href="#查看工作区的文件修改状态" class="headerlink" title="查看工作区的文件修改状态"></a>查看工作区的文件修改状态</h3><pre><code>git status #最常用命令</code></pre><h4 id="查看文件差异"><a href="#查看文件差异" class="headerlink" title="查看文件差异"></a>查看文件差异</h4><pre><code>git diff此命令比较的是工作目录中当前文件和暂存区域快照之间的差异， 也就是修改之后还没有暂存起来的变化内容git diff --staged比较已暂存的和快照的区别</code></pre><h3 id="添加和提交"><a href="#添加和提交" class="headerlink" title="添加和提交"></a>添加和提交</h3><h4 id="添加修改到暂存区"><a href="#添加修改到暂存区" class="headerlink" title="添加修改到暂存区"></a>添加修改到暂存区</h4><pre><code>git add &lt;filename&gt;git add * # 会忽略.gitignore中的文件</code></pre><p><img src="https://git-scm.com/book/en/v2/images/lifecycle.png" alt="git add"></p><h4 id="提交修改到你本地的版本库"><a href="#提交修改到你本地的版本库" class="headerlink" title="提交修改到你本地的版本库"></a>提交修改到你本地的版本库</h4><pre><code>git commit -m &quot;本次提交文件修改的内容说明&quot;</code></pre><h3 id="忽略文件列表"><a href="#忽略文件列表" class="headerlink" title="忽略文件列表"></a>忽略文件列表</h3><p>项目编译时有时候会产生一些不需要提交到仓库的文件，这时候.gitignore就派上了用场，git在add时会忽略.gitignore中的文件，.gitignore支持的格式规范如下所示</p><ul><li>所有空行或者以 ＃ 开头的行都会被 Git 忽略。</li><li>可以使用标准的 glob 模式匹配。</li><li>匹配模式可以以（/）开头防止递归。</li><li>匹配模式可以以（/）结尾指定目录。</li><li>要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。</li></ul><h3 id="移除文件"><a href="#移除文件" class="headerlink" title="移除文件"></a>移除文件</h3><h4 id="仅删除暂存区中的，但是想保留工作目录的文件"><a href="#仅删除暂存区中的，但是想保留工作目录的文件" class="headerlink" title="仅删除暂存区中的，但是想保留工作目录的文件"></a>仅删除暂存区中的，但是想保留工作目录的文件</h4><pre><code>git rm &lt;filename&gt; --cached</code></pre><p>这种情况是，不小心将大量的编译文件添加到暂存区，但是需要保留在工作目录</p><h4 id="同时删除暂存区和工作目录的文件"><a href="#同时删除暂存区和工作目录的文件" class="headerlink" title="同时删除暂存区和工作目录的文件"></a>同时删除暂存区和工作目录的文件</h4><pre><code>git rm &lt;filename&gt; -f</code></pre><p> 慎用，文件无法找回</p><h4 id="通配符模式"><a href="#通配符模式" class="headerlink" title="通配符模式"></a>通配符模式</h4><pre><code>git rm log/\*.log --cached</code></pre><h3 id="推送更改到远程仓库"><a href="#推送更改到远程仓库" class="headerlink" title="推送更改到远程仓库"></a>推送更改到远程仓库</h3><h4 id="如果本地目录并没有关联远程仓库"><a href="#如果本地目录并没有关联远程仓库" class="headerlink" title="如果本地目录并没有关联远程仓库"></a>如果本地目录并没有关联远程仓库</h4><pre><code>git remote add origin &lt;server&gt;</code></pre><h4 id="推送前面commit到版本库的内容到远程仓库的指定分支"><a href="#推送前面commit到版本库的内容到远程仓库的指定分支" class="headerlink" title="推送前面commit到版本库的内容到远程仓库的指定分支"></a>推送前面commit到版本库的内容到远程仓库的指定分支</h4><pre><code>git push &lt;repo&gt; &lt;branch&gt;</code></pre><h4 id="推送所有分支"><a href="#推送所有分支" class="headerlink" title="推送所有分支"></a>推送所有分支</h4><pre><code>git push</code></pre><h4 id="强制推送"><a href="#强制推送" class="headerlink" title="强制推送"></a>强制推送</h4><pre><code>git push -f(当本地与远程冲突无法自动合并时，并且以本地代码为主的情况，慎用)</code></pre><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><p>分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是“默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。<br><img src="http://rogerdudler.github.io/git-guide/img/branches.png" alt="分支示意图"></p><h4 id="拉取远程仓库的代码"><a href="#拉取远程仓库的代码" class="headerlink" title="拉取远程仓库的代码"></a>拉取远程仓库的代码</h4><pre><code>git pullgit pull = git fetch + git merge refs/remotes/origin/master</code></pre><h4 id="查看当前存在的分支，以及当前处于哪个分支"><a href="#查看当前存在的分支，以及当前处于哪个分支" class="headerlink" title="查看当前存在的分支，以及当前处于哪个分支"></a>查看当前存在的分支，以及当前处于哪个分支</h4><pre><code>git branch # 本地的分支git branch -a # 显示所有分支，包括远端仓库的分支git branch -v # 显示分支的详细信息</code></pre><h4 id="以当前的master分支为基础创建一个dev分支，并切换到dev分支"><a href="#以当前的master分支为基础创建一个dev分支，并切换到dev分支" class="headerlink" title="以当前的master分支为基础创建一个dev分支，并切换到dev分支"></a>以当前的master分支为基础创建一个dev分支，并切换到dev分支</h4><pre><code>git checkout -b dev</code></pre><h4 id="切换回master分支"><a href="#切换回master分支" class="headerlink" title="切换回master分支"></a>切换回master分支</h4><pre><code>git checkout master</code></pre><h4 id="删除创建的分支"><a href="#删除创建的分支" class="headerlink" title="删除创建的分支"></a>删除创建的分支</h4><pre><code>git branch -d dev  git branch -D dev # 强制删除分支</code></pre><h4 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h4><pre><code>切换到master分支，将dev分支的修改合并到master分支上git merge devgit pull和merge的时候git 都会尝试去自动合并改动。遗憾的是，这可能并非每次都成功，并可能出现冲突这时候就需要你修改这些文件来手动合并这些冲突改完之后，你需要执行如下命令以将它们标记为合并成功：git add &lt;filename&gt;</code></pre><h4 id="合并出现冲突"><a href="#合并出现冲突" class="headerlink" title="合并出现冲突"></a>合并出现冲突</h4><p>当多人对同一个文件的相同位置进行了修改时，git无法对差异部分进行自动合并，这时候需要进行手动的合并</p><pre><code>git mergetool</code></pre><p>输入上面的命令会出现下图的界面，按下回车，会使用vimdiff，也就是下面的第二个图</p><p><img src="http://gitlab.ngrok.pkgame.net/picture/ops_picture/raw/master/git_mergetool.png" alt="mergetool"></p><p>下图中左边的是你本地修改过后的版本LOCAL，右边是远端的版本REMOTE，中间是在远端和本地修改之前的版本BASE。</p><p><img src="http://gitlab.ngrok.pkgame.net/picture/ops_picture/raw/master/git_merge_conflict.png" alt="merge_conlict"></p><p>然后用vim的命令模式，选择其中的一个版本</p><pre><code>:diffget LO #注意按下冒号是进入命令模式，LO是LOCAL的缩写，也可以写全，BASE，REMOTE一样可以使用2位的缩写</code></pre><p>还有一个方法是直接手动进行修改为你想保留的版本，然后<code>git add &lt;filename&gt;</code></p><h4 id="查看当前分支与其它分支的差异"><a href="#查看当前分支与其它分支的差异" class="headerlink" title="查看当前分支与其它分支的差异"></a>查看当前分支与其它分支的差异</h4><pre><code>git diff &lt;source_branch&gt; &lt;target_branch&gt;</code></pre><p>建议开发的时候多使用分支，在开发完成之后再合并至主分支</p><h3 id="版本提交记录"><a href="#版本提交记录" class="headerlink" title="版本提交记录"></a>版本提交记录</h3><h4 id="查看提交记录-不包含被删除的commit操作"><a href="#查看提交记录-不包含被删除的commit操作" class="headerlink" title="查看提交记录(不包含被删除的commit操作)"></a>查看提交记录(不包含被删除的commit操作)</h4><pre><code>git loggit log --pretty=oneline #压缩成一行的loggit log --author=username #查看某人的提交记录</code></pre><h4 id="查看所有的reset和commit操作"><a href="#查看所有的reset和commit操作" class="headerlink" title="查看所有的reset和commit操作"></a>查看所有的reset和commit操作</h4><pre><code>git reflog</code></pre><h4 id="更多的功能"><a href="#更多的功能" class="headerlink" title="更多的功能"></a>更多的功能</h4><pre><code>git log --help</code></pre><h3 id="版本回溯"><a href="#版本回溯" class="headerlink" title="版本回溯"></a>版本回溯</h3><pre><code>git reset --soft # 保留当前的修改和提交，只是将HEAD指向较旧的版本git reset --hard # 丢弃当前的修改和提交，将旧的版本作为最新的HEAD</code></pre><h4 id="如果有操作失误，可以使用以下命令丢弃本地文件的修改"><a href="#如果有操作失误，可以使用以下命令丢弃本地文件的修改" class="headerlink" title="如果有操作失误，可以使用以下命令丢弃本地文件的修改"></a>如果有操作失误，可以使用以下命令丢弃本地文件的修改</h4><pre><code>git checkout -- &lt;filename&gt;这个命令不会修改已经添加到暂存区的内容，也不会对新文件有修改，只会将本地目录的文件回退到最新一次的提交上，也就是HEAD上</code></pre><h4 id="撤销暂存区中的修改"><a href="#撤销暂存区中的修改" class="headerlink" title="撤销暂存区中的修改"></a>撤销暂存区中的修改</h4><pre><code>git reset -- &lt;filename&gt; #撤销git add操作</code></pre><h4 id="如果忘记了修改了哪些文件，下面有两种方法进行恢复"><a href="#如果忘记了修改了哪些文件，下面有两种方法进行恢复" class="headerlink" title="如果忘记了修改了哪些文件，下面有两种方法进行恢复"></a>如果忘记了修改了哪些文件，下面有两种方法进行恢复</h4><pre><code>git fetch origingit rest --hard origin/master丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它或者直接回退至你的HEAD版本git reset --hard HEAD</code></pre><h2 id="实用技巧"><a href="#实用技巧" class="headerlink" title="实用技巧"></a>实用技巧</h2><h3 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h3><pre><code>git --config alias.st status #将st作为status的别名设置过后可以使用git st查看当前的git状态</code></pre><h3 id="彩色的输出"><a href="#彩色的输出" class="headerlink" title="彩色的输出"></a>彩色的输出</h3><pre><code>git config color.ui true</code></pre><h2 id="更深入的了解"><a href="#更深入的了解" class="headerlink" title="更深入的了解"></a>更深入的了解</h2><p><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener">git官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/09/13/hello-world/"/>
      <url>/2019/09/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hello </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
